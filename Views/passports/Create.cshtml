@model HRworks.Models.passport

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (Request.IsAuthenticated)
{
    <h2>Create</h2>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script>
        $(function () {
            $("#datepicker, #datepicker1, #datepicker2").datepicker();
            $("#employee_no, #employee_no1").chosen({ no_results_text: "Oops, nothing found!" });
        });
    </script>
    <script>
        function byidfill(parameters) {
            $("#employee_no, #employee_no1").chosen("destroy");
            var filled = document.getElementById('fill');
            document.getElementById('hide2').style.display = "none";
            var x = document.getElementById("employee_no1");
            var y = document.getElementById("employee_no");
            y.value = x.value;
            document.getElementById('hide').style.display = "";
            var z = document.getElementById("demo");
            var w = document.getElementById("demo1");
            z.style.display = "";
            w.style.display = "none";
            $("#employee_no, #employee_no1").chosen({ no_results_text: "Oops, nothing found!" });
            myFunction();
        };

        function bynamefill(parameters) {
            $("#employee_no, #employee_no1").chosen("destroy");
            document.getElementById('hide2').style.display = "";
            var x = document.getElementById("employee_no1");
            var y = document.getElementById("employee_no");
            x.value = y.value;
            document.getElementById('hide').style.display = "none";
            var z = document.getElementById("demo");
            var w = document.getElementById("demo1");
            w.style.display = "";
            z.style.display = "none";
            $("#employee_no, #employee_no1").chosen({ no_results_text: "Oops, nothing found!" });
            myFunction1();
        };

        var loadfile = function (event) {
            var reader = new FileReader();
            reader.onload = function () {
                var output = document.getElementById('output');
                output.src = reader.result;
            };
            reader.readAsDataURL(event.target.files[0]);
        };

        function myFunction() {
            var x = document.getElementById("employee_no").value;
            document.getElementById("demo").innerHTML = "employee_id :" + x;

        };

        function myFunction1() {
            var x = document.getElementById("employee_no1").value;
            document.getElementById("demo").innerHTML = "employee_id :" + x;

        };
    </script>


    using (Html.BeginForm("Create", "passports", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>passport</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.employee_no, "employee_no", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4"
                     id="hide">
                    @*
                        @Html.DropDownList("employee_no", null, htmlAttributes: new { @class = "form-control", @onchange="myfunction();" ,@id="employee_no"})*@
                    @Html.DropDownList("employee_no", null, new { @class = "form-control", @id = "employee_no" })
                    @Html.ValidationMessageFor(model => model.employee_no, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-4"
                     id="hide2"
                     style="display: none">
                    @*
                        @Html.DropDownList("employee_no", null, htmlAttributes: new { @class = "form-control", @onchange="myfunction();" ,@id="employee_no"})*@
                    @Html.DropDownList("employee_no1", null, new { @class = "form-control", @id = "employee_no1" })
                    @Html.ValidationMessageFor(model => model.employee_no, "", new { @class = "text-danger" })

                </div>

                <div class="col-md-6">
                    <input type="button"
                           onclick="bynamefill()" @*ondblclick="byidfill()"*@
                           value="change to name"
                           id="demo" />
                </div>
                <div class="col-md-6">
                    <input type="button"
                           onclick="byidfill()"
                           value="change to id"
                           style="display: none"
                           id="demo1" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.company_code, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.company_code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.company_code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.passport_no, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.passport_no, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.passport_no, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.passport_expiry, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.passport_expiry, new { htmlAttributes = new { @class = "form-control",@id="datepicker" } })
                    @Html.ValidationMessageFor(model => model.passport_expiry, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.passport_issue_date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.passport_issue_date, new { htmlAttributes = new { @class = "form-control",@id="datepicker1" } })
                    @Html.ValidationMessageFor(model => model.passport_issue_date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.passport_return_date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.passport_return_date, new { htmlAttributes = new { @class = "form-control",@id="datepicker2" } })
                    @Html.ValidationMessageFor(model => model.passport_return_date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.passport_remarks, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.passport_remarks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.passport_remarks, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="form-group">
            <hr />
            <div class="row">

                @Html.LabelFor(model => model.imgpath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    <input type="file"
                           id="fileBase"
                           style="display: none;"
                           accept="image/*" onchange="document.getElementById('test').innerHTML = 'file added'"
                           name="fileBase" />
                    <input type="button"
                           value="Upload"
                           onclick="document.getElementById('fileBase').click();" /><p id="test"></p>
                </div>
                <div class="col-md-5">
                     
                </div>
            </div>
            <hr />
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit"
                       value="Create"
                       class="btn btn-default" />
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}