@model HRworks.Models.contract

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
@if (Request.IsAuthenticated)
{
    <script>
        function byidfill(parameters) {
            var filled = document.getElementById('fill');
            document.getElementById('hide2').style.display = "none";
            var x = document.getElementById("employee_no1");
            var y = document.getElementById("employee_no");
            y.value = x.value;
            document.getElementById('hide').style.display = "";
            var z = document.getElementById("demo");
            var w = document.getElementById("demo1");
            z.style.display = "";
            w.style.display = "none";
            myFunction();
        };

        function bynamefill(parameters) {
            document.getElementById('hide2').style.display = "";
            var x = document.getElementById("employee_no1");
            var y = document.getElementById("employee_no");
            x.value = y.value;
            document.getElementById('hide').style.display = "none";
            var z = document.getElementById("demo");
            var w = document.getElementById("demo1");
            w.style.display = "";
            z.style.display = "none";
            myFunction1();
        };

        var loadfile = function (event) {
            var reader = new FileReader();
            reader.onload = function () {
                var output = document.getElementById('output');
                output.src = reader.result;
            };
            reader.readAsDataURL(event.target.files[0]);
        };

        function myFunction() {
            var x = document.getElementById("employee_no").value;
            document.getElementById("demo").innerHTML = "employee_id :" + x;

        };

        function myFunction1() {
            var x = document.getElementById("employee_no1").value;
            document.getElementById("demo1").innerHTML = "employee_id :" + x;

        };
    </script>
    <script>
        function grostol() {
            var bas = parseFloat($("#bas").val());
            var hou = parseFloat($("#hou").val());
            var tran = parseFloat($("#tran").val());
            var liv = parseFloat($("#liv").val());
            var foo = parseFloat($("#foo").val());
            var oth = parseFloat($("#oth").val());
            var arr = parseFloat($("#arr").val());
            var gradevalue = $("#gradelist").val();
            if (gradevalue == "1" || gradevalue == "2" || gradevalue == "3" || gradevalue == "4C" || gradevalue == "4B") {
                $("#gro").val(bas + liv + oth + arr);
            } else {
                $("#gro").val(bas + hou + tran + liv + foo + oth + arr);
            }
        }
    </script>

    using (Html.BeginForm("Edit", "contracts", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal" onclick="grostol()">
    <h4>contract</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.con_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.con_id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.con_id, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div
            class="form-group">
            @Html.LabelFor(model => model.employee_no, "employee_no", htmlAttributes: new {@class = "control-label col-md-2"})
            <div
                class="col-md-4"
                id="hide">
                $1$
                   @Html.DropDownList("employee_no", null, htmlAttributes: new { @class = "form-control", @onchange="myfunction();" ,@id="employee_no"})#1#
                @Html.DropDownList("employee_no", null, new {@class = "form-control", @id = "employee_no"})
                @Html.ValidationMessageFor(model => model.employee_no, "", new {@class = "text-danger"})

            </div>
            <div
                class="col-md-4"
                id="hide2"
                style="display: none">
                $1$
                   @Html.DropDownList("employee_no", null, htmlAttributes: new { @class = "form-control", @onchange="myfunction();" ,@id="employee_no"})#1#
                @Html.DropDownList("employee_no1", null, new {@class = "form-control", @id = "employee_no1"})
                @Html.ValidationMessageFor(model => model.employee_no, "", new {@class = "text-danger"})

            </div>

            <div
                class="col-md-6">
                <input
                    type="button"
                    onclick="bynamefill()" $1$ondblclick="byidfill()"#1#
                    value="change to name"
                    id="demo"/>
            </div>
            <div
                class="col-md-6">
                <input
                    type="button"
                    onclick="byidfill()"
                    value="change to id"
                    style="display: none"
                    id="demo1"/>
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.employee_no, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.master_file.employee_no, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.EditorFor(model => model.employee_no, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Style = "display:none" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.company, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.company, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.company, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.category, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.grade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.grade, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownList("gradelist", null, new { @class = "form-control", @id = "gradelist" })
            @Html.ValidationMessageFor(model => model.grade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.departmant_project, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.departmant_project, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.departmant_project, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.basic, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.basic, new { htmlAttributes = new { @class = "form-control", @id = "bas" } })
            @Html.ValidationMessageFor(model => model.basic, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.housing_allowance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.housing_allowance, new { htmlAttributes = new { @class = "form-control", @id = "hou" } })
            @Html.ValidationMessageFor(model => model.housing_allowance, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.transportation_allowance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.transportation_allowance, new { htmlAttributes = new { @class = "form-control", @id = "tran" } })
            @Html.ValidationMessageFor(model => model.transportation_allowance, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.living_allowance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.living_allowance, new { htmlAttributes = new { @class = "form-control", @id = "liv" } })
            @Html.ValidationMessageFor(model => model.living_allowance, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.food_allowance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.food_allowance, new { htmlAttributes = new { @class = "form-control", @id = "foo" } })
            @Html.ValidationMessageFor(model => model.food_allowance, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.others, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.others, new { htmlAttributes = new { @class = "form-control", @id = "oth" } })
            @Html.ValidationMessageFor(model => model.others, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.arrears, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.arrears, new { htmlAttributes = new { @class = "form-control", @id = "arr" } })
            @Html.ValidationMessageFor(model => model.arrears, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.salary_details, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.salary_details, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "gro" } })
            @Html.ValidationMessageFor(model => model.salary_details, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" style="display: none">
        @Html.LabelFor(model => model.FOT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FOT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FOT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display: none">
        @Html.LabelFor(model => model.ticket_allowance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ticket_allowance, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ticket_allowance, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display: none">
        @Html.LabelFor(model => model.imgpath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.imgpath, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.imgpath, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <hr />
        <div class="row">

            @Html.LabelFor(model => model.imgpath, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-5">
                <input type="file"
                       id="fileBase"
                       style="display: none;"
                       accept="image/*" onchange="document.getElementById('test').innerHTML = 'file added'"
                       name="fileBase" />
                <input type="button"
                       value="Upload"
                       onclick="document.getElementById('fileBase').click();" /><p id="test"></p>
            </div>
            <div class="col-md-5">
                <img id="output" />
            </div>
        </div>
        <hr />
    </div>
    @Html.HiddenFor(model => model.employee_id)

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit"
                   value="Save"
                   class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}