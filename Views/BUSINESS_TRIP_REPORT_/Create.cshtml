@model HRworks.Models.BUSINESS_TRIP_REPORT_

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <script>
        function byidfill(parameters) {
            var filled = document.getElementById('fill');
            document.getElementById('hide2').style.display = "none";
            var x = document.getElementById("employee_no1");
            var y = document.getElementById("employee_no");
            y.value = x.value;
            document.getElementById('hide').style.display = "";
            var z = document.getElementById("demo");
            var w = document.getElementById("demo1");
            z.style.display = "";
            w.style.display = "none";
            myFunction();
        };

        function bynamefill(parameters) {
            document.getElementById('hide2').style.display = "";
            var x = document.getElementById("employee_no1");
            var y = document.getElementById("employee_no");
            x.value = y.value;
            document.getElementById('hide').style.display = "none";
            var z = document.getElementById("demo");
            var w = document.getElementById("demo1");
            w.style.display = "";
            z.style.display = "none";
            myFunction1();
        };

//        var loadfile = function (event) {
//            var reader = new FileReader();
//            reader.onload = function () {
//                var output = document.getElementById('output');
//                output.src = reader.result;
//            };
//            reader.readAsDataURL(event.target.files[0]);
//        };

        function myFunction() {
            var x = document.getElementById("employee_no").value;
            document.getElementById("demo").innerHTML = "employee_id :" + x;

        };

        function myFunction1() {
            var x = document.getElementById("employee_no1").value;
            document.getElementById("demo1").innerHTML = "employee_id :" + x;

        };
    </script>
    <div class="form-horizontal">
        <h4>BUSINESS_TRIP_REPORT_</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Employee_id, "employee_no", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4"
                 id="hide">
                @*
                        @Html.DropDownList("employee_no", null, htmlAttributes: new { @class = "form-control", @onchange="myfunction();" ,@id="employee_no"})*@
                @Html.DropDownList("Employee_id", null, new { @class = "form-control", @id = "employee_no" })
                @Html.ValidationMessageFor(model => model.Employee_id, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-4"
                 id="hide2"
                 style="display: none">
                @*
                        @Html.DropDownList("employee_no", null, htmlAttributes: new { @class = "form-control", @onchange="myfunction();" ,@id="employee_no"})*@
                @Html.DropDownList("Employee_id1", null, new { @class = "form-control", @id = "employee_no1" })
                @Html.ValidationMessageFor(model => model.Employee_id, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-6">
                <input type="button"
                       onclick="bynamefill()" @*ondblclick="byidfill()"*@
                       value="change to name"
                       id="demo"/>
            </div>
            <div class="col-md-6">
                <input type="button"
                       onclick="byidfill()"
                       value="change to id"
                       style="display: none"
                       id="demo1"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.type_of_trip, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.type_of_trip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.type_of_trip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IO_specify, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IO_specify, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IO_specify, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.destination, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.destination, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.destination, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Departure_Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Departure_Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Departure_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Return_Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Return_Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Return_Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TRIP_OBJECTIVE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TRIP_OBJECTIVE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TRIP_OBJECTIVE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Objectives, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Objectives, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Objectives, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
