@using PagedList.Mvc
@model IEnumerable<HRworks.Models.Leave>
@{
    ViewBag.Title = "getallonleave";
}

<h2>employees on leave</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("getallonleave", "Leaves", FormMethod.Get, new { id = "form1" }))
{
    <div>
        @*Page Size:@Html.DropDownList("pageSize", null, new { @id = "pageSize"/*, @onchange = "norc()"*/ })
        *@
        page size:-<input type="text" name="pagesize" id="pagesize" value="@ViewBag.pagesize" />
        search:-
        @Html.TextBox("search")
        <input type="submit"
               name="submit"
               value="Search/change records" />
    </div>
    <div>
        @Html.PagedListPager((PagedList.IPagedList)Model, page => Url.Action("getallonleave", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, pagesize = ViewBag.pagesize, search = ViewBag.search }))
        <input type="button" class="btn btn-default" onclick="window.location.href = '@Url.Action("Index")'" value="back to main" />
    </div>
}
<table class="table" style="border-collapse: separate;">
    <tr>
        <th style="position: sticky;top: 0;">#SN</th>
        @if (User.Identity.Name == "dinizsneden@gmail.com")
        {
            <th style="position: sticky;top: 0;">
                @Html.DisplayNameFor(model => model.Employee_id)
            </th>
            <th style="position: sticky;top: 0;">
                @Html.DisplayNameFor(model => model.Id)
            </th>
        }
        <th style="position: sticky;top: 0;">
            @Html.DisplayNameFor(model => model.master_file.employee_no)
        </th>
        <th style="position: sticky;top: 0;">
            @Html.DisplayNameFor(model => model.master_file.employee_name)
        </th>
        <th style="position: sticky;top: 0;">
            @Html.DisplayNameFor(model => model.leave_type)
        </th>
        <th style="position: sticky;top: 0;">
            @Html.DisplayNameFor(model => model.Date)
        </th>
        <th style="position: sticky;top: 0;">
            @Html.DisplayNameFor(model => model.Start_leave)
        </th>
        <th style="position: sticky;top: 0;">
            @Html.DisplayNameFor(model => model.End_leave)
        </th>
        <th style="position: sticky;top: 0;">
            @Html.DisplayNameFor(model => model.days)
        </th>
        <th style="position: sticky;top: 0;">
            @Html.DisplayNameFor(model => model.Return_leave)
        </th>
        <th style="position: sticky;top: 0;">
            unpaid days(after return date)
        </th>
        <th style="position: sticky;top: 0;">
            actual return date
        </th>
        @if (User.IsInRole("super_admin"))
        {
            <th style="position: sticky;top: 0;">changed by</th>
            <th style="position: sticky;top: 0;">changed date</th>
        }

        @if (User.IsInRole("admin") || User.IsInRole("super_admin") || User.IsInRole("payrole"))
        {
            <th style="position: sticky;top: 0;"></th>
        }
    </tr>
    @{ var i = 0;
    }
    @foreach (var item in Model)
    {
<tr>
    @{i++;}
    <td>@i</td>
    @if (User.Identity.Name == "dinizsneden@gmail.com")
    {
        <td>
            @Html.DisplayFor(modelItem => item.Employee_id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
    }
    <td>
        @Html.DisplayFor(modelItem => item.master_file.employee_no)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.master_file.employee_name)
    </td>
    <td >
        @if (item.leave_type == "1")
        {
            <i>Annual</i>
        }
        @if (item.leave_type == "2")
        {
            <i>Sick(non industrial)</i>
        }
        @if (item.leave_type == "3")
        {
            <i>Compassionate</i>
        }
        @if (item.leave_type == "4")
        {
            <i>Maternity </i>
        }
        @if (item.leave_type == "5")
        {
            <i>Haj</i>
        }
        @if (item.leave_type == "6")
        {
            <i>Unpaid </i>
        }
        @if (item.leave_type == "7")
        {
            <i> Sick(industrial)</i>
        }
        @if (item.leave_type == "8")
        {
            <i>UDDAH</i>
        }
        @if (item.leave_type == "9")
        {
            <i>ESCORT</i>
        }
        @if (item.leave_type == "10")
        {
            <i>PATERNITY</i>
        }
        @if (item.leave_type == "11")
        {
            <i>SABBATICAL</i>
        }
        @if (item.leave_type == "12")
        {
            <i>STUDY</i>
        }
        @if (item.leave_type == "13")
        {
            <i>Compensatory</i>
        }
        @if (item.leave_type == "14")
        {
            <i>balance rectificatiom</i>
        }
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Date)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Start_leave)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.End_leave)
    </td>
    <td>
        @*
            helped by ahemed yousaf
        *@
        @if (item.half == true)
        {
            var a = item.Start_leave;
            var b = item.End_leave;
            double days = 0;
            if (a == b)
            {
                days = 1;
            }
            else
            {
                var ab = b - a;
                if (ab.HasValue)
                {
                    days = ab.Value.TotalDays;
                    days = System.Math.Abs(days);
                    days += 1;
                }
            }
            days -= 0.5;
            @days.ToString()
        }
        else
        {
            {
                var a = item.Start_leave;
                var b = item.End_leave;
                double days = 0;
                if (a == b)
                {
                    days = 1;
                }
                else
                {
                    var ab = b - a;
                    if (ab.HasValue)
                    {
                        days = ab.Value.TotalDays;
                        days = System.Math.Abs(days);
                        days += 1;
                    }
                }
                @days.ToString()
            }
        }

    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Return_leave)
    </td>
    <td>
        @if (!item.actual_return_date.HasValue)
        {
            if (item.Return_leave != null)
            {
                if (item.End_leave < DateTime.Now)
                {
                    if (item.Return_leave.Value.Date != DateTime.Now.Date)
                    {
                        var radiff = DateTime.Now - item.Return_leave.Value;
                        @radiff.Days
                    }
                    else
                    {
                        var ra = 0;
                        @ra
                    }
                }
                else
                {
                    var ra = 0;
                    @ra
                }

            }
            else
            {
                var ra = 0;
                @ra
            }
        }
        else
        {
            var ra = 0;
            @ra
        }
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.actual_return_date)
    </td>
    @if (User.IsInRole("super_admin"))
    {
        <td>
            @Html.DisplayFor(modelItem => item.actualchangedby)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.actualchangeddateby)
        </td>
    }
    @if (User.IsInRole("admin") || User.IsInRole("super_admin") || User.IsInRole("payrole"))
    {
        <td>
            @Html.ActionLink("change/enter actual return date", "Edit", new { id = item.Id })
            @if (User.IsInRole("super_admin"))
            {
                <b>| @Html.ActionLink("delete", "Delete", new { id = item.Id })</b>
            }
        </td>
    }
</tr>
    }

    </table>