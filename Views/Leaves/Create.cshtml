@model HRworks.Models.Leave

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    $(function () {
        $("#datepicker").datepicker({
            altField: "#alternate",
            altFormat: "MM,yy",
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            showButtonPanel: true,
            dateFormat: "dd M yy"
        });
        $("#datepicker1").datepicker({
            altField: "#alternate",
            altFormat: "MM,yy",
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            showButtonPanel: true,
            dateFormat: "dd M yy"
        });
        $("#datepicker2").datepicker({
            altField: "#alternate",
            altFormat: "MM,yy",
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            showButtonPanel: true,
            dateFormat: "dd M yy"
        });
        $("#datepicker3").datepicker({
            altField: "#alternate",
            altFormat: "MM,yy",
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            showButtonPanel: true,
            dateFormat: "dd M yy",
            onSelect: function (date) {

                var selectedDate = new Date(date);
                var msecsInADay = 86400000;
                var endDate = new Date(selectedDate.getTime() + msecsInADay);

                //Set Minimum Date of EndDatePicker After Selected Date of StartDatePicker
                $("#datepicker2").datepicker("option", "minDate", endDate);
            }
        });
        $("#datepicker4").datepicker({
            altField: "#alternate",
            altFormat: "MM,yy",
            changeMonth: true,
            changeYear: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            showButtonPanel: true,
            dateFormat: "dd M yy",
            onSelect: function (date) {

                var selectedDate = new Date(date);
                var msecsInADay = 86400000;
                var endDate = new Date(selectedDate.getTime() );

                //Set Minimum Date of EndDatePicker After Selected Date of StartDatePicker
                $("#datepicker3").datepicker("option", "minDate", endDate);
            }
        });
        $("#employee_no").chosen({ no_results_text: "Oops, nothing found!" });
    });

    function dayscount() {
        var a = new Date($("#datepicker3").val());
        var b = new Date($("#datepicker4").val());
        if ((a - b) == 0) {
            $("#days").val(1);
        } else {
        $("#days").val((a - b) / (1000 * 60 * 60 * 24)+1);
        }
    }
</script>
<script>
    function byidfill(parameters) {
        var filled = document.getElementById('fill');
        document.getElementById('hide2').style.display = "none";
        var x = document.getElementById("employee_no1");
        var y = document.getElementById("employee_no");
        y.value = x.value;
        document.getElementById('hide').style.display = "";
        var z = document.getElementById("demo");
        var w = document.getElementById("demo1");
        z.style.display = "";
        w.style.display = "none";
        myFunction();
    };

    function bynamefill(parameters) {
        document.getElementById('hide2').style.display = "";
        var x = document.getElementById("employee_no1");
        var y = document.getElementById("employee_no");
        x.value = y.value;
        document.getElementById('hide').style.display = "none";
        var z = document.getElementById("demo");
        var w = document.getElementById("demo1");
        w.style.display = "";
        z.style.display = "none";
        myFunction1();
    };

//        var loadfile = function (event) {
//            var reader = new FileReader();
//            reader.onload = function () {
//                var output = document.getElementById('output');
//                output.src = reader.result;
//            };
//            reader.readAsDataURL(event.target.files[0]);
//        };

    function myFunction() {
        var x = document.getElementById("employee_no").value;
        document.getElementById("demo").innerHTML = "employee_id :" + x;

    };

    function myFunction1() {
        var x = document.getElementById("employee_no1").value;
        document.getElementById("demo1").innerHTML = "employee_id :" + x;

    };
</script>

@using (Html.BeginForm("Create", "Leaves", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="form-horizontal" onclick="dayscount()">
    <h2>New Leave</h2>
    <hr /><p style="font-size: 110%; color: red">@ViewBag.exhist</p>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Employee_id, "employee_no", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6"
             id="hide">
            @*
                        @Html.DropDownList("employee_no", null, htmlAttributes: new { @class = "form-control", @onchange="myfunction();" ,@id="employee_no"})*@
            @Html.DropDownList("Employee_id", null, new { @class = "form-control", @id = "employee_no" })
            @Html.ValidationMessageFor(model => model.Employee_id, "", new { @class = "text-danger" })

        </div>
        <div class="col-md-6"
             id="hide2"
             style="display: none">
            @*
                        @Html.DropDownList("employee_no", null, htmlAttributes: new { @class = "form-control", @onchange="myfunction();" ,@id="employee_no"})*@
            @Html.DropDownList("employee_id1", null, new { @class = "form-control", @id = "employee_no1" })
            @Html.ValidationMessageFor(model => model.Employee_id, "", new { @class = "text-danger" })

        </div>

        <div class="col-md-4">
            <input type="button"
                   onclick="bynamefill()" @*ondblclick="byidfill()"*@
                   value="change to name"
                   id="demo"/>
        </div>
        <div class="col-md-4">
            <input type="button"
                   onclick="byidfill()"
                   value="change to id"
                   style="display: none"
                   id="demo1"/>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            *@
            <input type="text"
                   id="datepicker"
                   class="form-control"
                   name="Date" required="required"/>
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.Reference, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*
                @Html.EditorFor(model => model.Reference, new { htmlAttributes = new { @class = "form-control" } })
            *@
            <input type="file"
                   id="fileBase"
                   name="fileBase"  accept="image/*,.pdf,.doc"/>
            @Html.ValidationMessageFor(model => model.Reference, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Start_leave, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*
                @Html.EditorFor(model => model.Start_leave, new { htmlAttributes = new { @class = "form-control" } })
            *@
            <input type="text"
                   id="datepicker4"
                   class="form-control"
                   name="Start_leave"  required="required"/>
            @Html.ValidationMessageFor(model => model.Start_leave, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.End_leave, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*
                @Html.EditorFor(model => model.End_leave, new { htmlAttributes = new { @class = "form-control" } })
            *@
            <input type="text"
                   id="datepicker3"
                   class="form-control"
                   name="End_leave"  required="required"/>
            @Html.ValidationMessageFor(model => model.End_leave, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.days, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.days, new { htmlAttributes = new { @class = "form-control", @id = "days" } })
            @Html.ValidationMessageFor(model => model.days, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Return_leave, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*
                @Html.EditorFor(model => model.Return_leave, new { htmlAttributes = new { @class = "form-control" } })
            *@
            <input type="text"
                   id="datepicker2"
                   class="form-control"
                   name="Return_leave"  required="required"/>
            @Html.ValidationMessageFor(model => model.Return_leave, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.leave_type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*
                @Html.EditorFor(model => model.leave_type, new { htmlAttributes = new { @class = "form-control" } })
            *@
            @Html.DropDownList("leave_type", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.leave_type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display: none">
        @Html.LabelFor(model => model.actual_return_date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*
                @Html.EditorFor(model => model.actual_return_date, new { htmlAttributes = new {  @id="datepicker",@class = "form-control"} })
            *@
            <input type="text"
                   id="datepicker1"
                   class="form-control"
                   name="actual_return_date" />
            @Html.ValidationMessageFor(model => model.actual_return_date, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.half, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.CheckBoxFor(m => m.half)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10" onclick="dayscount()">
            <input type="submit" value="Save" class="btn btn-default" onclick="dayscount()" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
