@using OfficeOpenXml.FormulaParsing.Excel.Functions.DateTime
@model IEnumerable<HRworks.Models.Leave>

@{
    ViewBag.Title = "report";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var endyeardate = new DateTime(DateTime.Today.Year -1, 12, 31);
}

<div style="position: fixed;top: 100px "><br /></div>
<div style="position: sticky;top: 100px;">
    <h2>individual report</h2>
    <br />
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script>
        $(function () {
            $("#datepicker").datepicker({
                altField: "#alternate",
                altFormat: "MM,yy",
                changeMonth: true,
                changeYear: true,
                showOtherMonths: true,
                selectOtherMonths: true,
                showButtonPanel: true,
                dateFormat: "dd M yy"
            });
            $("#datepicker1").datepicker({
                altField: "#alternate",
                altFormat: "MM,yy",
                changeMonth: true,
                changeYear: true,
                showOtherMonths: true,
                selectOtherMonths: true,
                showButtonPanel: true,
                dateFormat: "dd M yy"
            });
            $("#empno").chosen({ no_results_text: "Oops, nothing found!" });
        });

        function humanise(diff) {
            // The string we're working with to create the representation
            var str = '';
            // Map lengths of `diff` to different time periods
            var values = [[' year', 365], [' month', 30], [' day', 1]];
            // Iterate over the values...
            for (var i = 0; i < values.length; i++) {
                var amount = Math.floor(diff / values[i][1]);
                // ... and find the largest time value that fits into the diff
                if (amount >= 1) {
                    // If we match, add to the string ('s' is for pluralization)
                    str += amount + values[i][0] + (amount > 1 ? 's' : '') + ' ';

                    // and subtract from the diff
                    diff -= amount * values[i][1];
                }
            }
            return str;
        }
    </script>
    <div class="row">
        <div class="col-md-5">
            <p>
                <input type="button" class="btn btn-default" onclick="window.location.href = '@Url.Action("Create")'" value="Create New" />
                <input type="button" class="btn btn-default" onclick="window.location.href = '@Url.Action("DownloadExcel", "Leaves", new {  Employee_id = ViewBag.no, eddate = ViewBag.eddate })'" value="Export" />
            </p>
        </div>
        <div class="col-md-5" style="left:50%">
            <input type="button" class="btn btn-default" onclick="window.location.href = '@Url.Action("Index")'" value="back to main" />
        </div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.DropDownList("Employee_id", null, htmlAttributes: new { @class = "form-control", @id = "empno" })
        <br />
        <br />
        <i style="display: none">report Date</i>
        <input type="text" style="display: none" id="datepicker1" name="eddate" class="form-control" />
        <br />
        <input type="submit" value="Search" class="btn btn-default" />
    }
    <br />
    <h3><b>employee name:- @ViewBag.name <br /> employee no:- @ViewBag.no</b></h3>
    <br />
    <br />
        <table class="table" style="width: 25%;">
            <tr>
                <th>description</th>
                <th></th>
            </tr>
            <tr>
                <td style="width: 50%;">period</td>
                <td >@ViewBag.per</td>
            </tr>
            <tr>
                <td>unpaid</td>
                <td>@ViewBag.ump</td>
            </tr>
            <tr>
                <td>net period</td>
                <td>@ViewBag.netp</td>
            </tr>
            <tr>
                <td>accrued</td>
                <td>@ViewBag.accr</td>
            </tr>
            <tr>
                <td>annual leave taken</td>
                <td>@ViewBag.aval</td>
            </tr>
            <tr>
                <td> Annual Leave Applied</td>
                <td>@ViewBag.faval</td>
            </tr>
            <tr>
                <td>Annual Leave total</td>
                <td>@ViewBag.taval</td>
            </tr>
            <tr>
                <td>leave balance</td>
                <td>@ViewBag.lbal</td>
            </tr>
            <tr>
                <td>forfited balance</td>
                <td>@ViewBag.forfited</td>
            </tr>
            <tr>
                <td style="background-color: #152939"></td>
                <td style="background-color: #152939"></td>
            </tr>
            <tr>
                <td>sick </td>
                <td>@ViewBag.sick</td>
            </tr>
            <tr>
                <td>compassionate </td>
                <td> @ViewBag.comp</td>
            </tr>
            <tr>
                <td>maternity</td>
                <td>@ViewBag.mate</td>
            </tr>
            <tr>
                <td>haj</td>
                <td>@ViewBag.haj</td>
            </tr>
            <tr>
                <td>UDDAH</td>
                <td>@ViewBag.udd</td>
            </tr>
            <tr>
                <td>escort</td>
                <td>@ViewBag.esco</td>
            </tr>
            <tr>
                <td>paternity</td>
                <td>@ViewBag.pater</td>
            </tr>
        </table>
    <br />
    <hr />
    <table class="table">
        <tr>
            <th>
                SN#
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Start_leave)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.End_leave)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.leave_type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.days)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.half)
            </th>
        </tr>
        @{
            int i = 0;
        }
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @{
                        i++;
                    }
                    @i
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Start_leave)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.End_leave)
                </td>
                <td>
                    @if (item.leave_type == "1")
                    {
                        <i>Annual</i>
                    }
                    @if (item.leave_type == "2")
                    {
                        <i>Sick(non industrial)</i>
                    }
                    @if (item.leave_type == "3")
                    {
                        <i>Compassionate</i>
                    }
                    @if (item.leave_type == "4")
                    {
                        <i>Maternity </i>
                    }
                    @if (item.leave_type == "5")
                    {
                        <i>Haj</i>
                    }
                    @if (item.leave_type == "6")
                    {
                        <i>Unpaid </i>
                    }
                    @if (item.leave_type == "7")
                    {
                        <i> Sick(industrial)</i>
                    }
                    @if (item.leave_type == "8")
                    {
                        <i>UDDAH</i>
                    }
                    @if (item.leave_type == "9")
                    {
                        <i>ESCORT</i>
                    }
                    @if (item.leave_type == "10")
                    {
                        <i>PATERNITY</i>
                    }
                </td>
                <td>
                    @*
                        helped by ahemed yousaf
                    *@
                    @if (item.half == true)
                    {
                        var a = item.Start_leave;
                        var b = item.End_leave;
                        double days = 0;
                        if (a == b)
                        {
                            days = 1;
                        }
                        else
                        {
                            var ab = b - a;
                            if (ab.HasValue)
                            {
                                days = ab.Value.TotalDays;
                                days = System.Math.Abs(days);
                                days += 1;
                            }
                        }
                        days -= 0.5;
                        @days.ToString()
                    }
                    else
                    {
                        {
                            var a = item.Start_leave;
                            var b = item.End_leave;
                            double days = 0;
                            if (a == b)
                            {
                                days = 1;
                            }
                            else
                            {
                                var ab = b - a;
                                if (ab.HasValue)
                                {
                                    days = ab.Value.TotalDays;
                                    days = System.Math.Abs(days);
                                    days += 1;
                                }
                            }
                            @days.ToString()
                        }
                    }

                </td>

                <td>
                    @{

                        if (item.half)
                        {
                            <p>YES</p>
                        }
                        else
                        {
                            <p>no</p>
                        }

                    }
                </td>
            </tr>
        }

    </table>

</div>