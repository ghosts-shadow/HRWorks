@model HRworks.Models.liquidation

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>liquidation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.bill_no, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bill_no, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bill_no, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.expenses, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("expenses",null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.expenses, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.invoice_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.invoice_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.invoice_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.discription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.discription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.discription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.employee_no, "employee_no", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("employee_no", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.employee_no, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MBNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MBNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MBNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.invoice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.invoice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.invoice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VAT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VAT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VAT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.invoice_amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.invoice_amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.invoice_amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.refr, "refr", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("refr", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.refr, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.changed_by, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.changed_by, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.changed_by, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="display:none">
            @Html.LabelFor(model => model.date_changed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date_changed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.date_changed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
