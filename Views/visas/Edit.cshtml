@model HRworks.Models.visa

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
        $(function () {
            $("#datepicker").datepicker();
        });
        $(function () {
            $("#datepicker1").datepicker();
        });
        $(function () {
            $("#datepicker2").datepicker();
        });
</script>
<script>
        function byidfill(parameters) {
            var filled = document.getElementById('fill');
            document.getElementById('hide2').style.display = "none";
            var x = document.getElementById("employee_no1");
            var y = document.getElementById("employee_no");
            y.value = x.value;
            document.getElementById('hide').style.display = "";
            var z = document.getElementById("demo");
            var w = document.getElementById("demo1");
            z.style.display = "";
            w.style.display = "none";
            myFunction();
        };

        function bynamefill(parameters) {
            document.getElementById('hide2').style.display = "";
            var x = document.getElementById("employee_no1");
            var y = document.getElementById("employee_no");
            x.value = y.value;
            document.getElementById('hide').style.display = "none";
            var z = document.getElementById("demo");
            var w = document.getElementById("demo1");
            w.style.display = "";
            z.style.display = "none";
            myFunction1();
        };

        var loadfile = function(event) {
            var reader = new FileReader();
            reader.onload = function() {
                var output = document.getElementById('output');
                output.src = reader.result;
            };
            reader.readAsDataURL(event.target.files[0]);
        };

        function myFunction() {
            var x = document.getElementById("employee_no").value;
            document.getElementById("demo").innerHTML = "employee_id :" + x;

        };

        function myFunction1() {
            var x = document.getElementById("employee_no1").value;
            document.getElementById("demo").innerHTML = "employee_id :" + x;

        };
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>visa</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.employee_id)

    <div class="form-group">
        @Html.LabelFor(model => model.uid_no, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.uid_no, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.uid_no, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.emp_no, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.master_file.employee_no, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.EditorFor(model => model.emp_no, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "display:none" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.file_no, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.file_no, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.file_no, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.place_of_issue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.place_of_issue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.place_of_issue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.accompanied_by, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.accompanied_by, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.accompanied_by, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.rv_expiry, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.rv_expiry, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.rv_expiry, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.rv_issue, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.rv_issue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.rv_issue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.proff_as_per_visa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.proff_as_per_visa, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.proff_as_per_visa, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.sponsor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.sponsor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.sponsor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <hr />
        <div class="row">

            @Html.LabelFor(model => model.imgpath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <input type="file"
                       id="fileBase"
                       style="display: none;"
                       accept="image/*" onchange="document.getElementById('test').innerHTML = 'file added'"
                       name="fileBase" />
                <input type="button"
                       value="Upload"
                       onclick="document.getElementById('fileBase').click();" /><p id="test"></p>
            </div>
            <div class="col-md-5">
            </div>
        </div>
        <hr />
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
